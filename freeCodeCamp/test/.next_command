builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp/
__vsc_prompt_cmd_original
ls --color=auto
pwd
ls --color=auto
cd test/
ppwd
pwd
ls --color=auto
__vsc_prompt_cmd_original
cd ..
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules/
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
more README.md
__vsc_prompt_cmd_original
ls --color=auto
more LICENSE-MIT
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
clear
ls --color=auto
cd src
wd
pwd
ls --color=auto
more index.js
cd ..
cd ..
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.html
touch styles.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto --all
cd .
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
__vsc_prompt_cmd_original
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images/
cp footer.jpeg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts/
find
mv lato.ttf fonts/
mv menlo.otf fonts/
find
mkdir client
mkdir client/src
mv index.html client/src
find
mv index.js client/src
mv styles.css client/src
find
find client
find --help
find -name index.html
find -name styles.css
find -name src
find
cd client/
mkdir assets
cd assets/
mkdir images
cd images/
touch background.jpg
cd ../../..
cd images/
ls --color=auto
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images/
find -name header.png
find -name footer.jpeg
mv images/footer.jpeg client/assets/images/
find
rmdir images/
find images/
rm images/background.jpg
rmdir images/
ls --color=auto
find
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons/
find
mv CodeRoad.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts/
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
rm --help
__vsc_prompt_cmd_original
ls --color=auto
rm -r fonts/
__vsc_prompt_cmd_original
ls --color=auto
touch package.json
touch server.js
__vsc_prompt_cmd_original
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
